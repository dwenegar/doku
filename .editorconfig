root = true

[*]
insert_final_newline = true
trim_trailing_whitespace = true
indent_style = space
indent_size = 4
charset = utf-8
tab_width = 4
end_of_line = lf

# XML project files
[*.{csproj,vcxproj,vcxproj.filters,proj,nativeproj,locproj}]
indent_size = 2

# XML config files
[*.{props,targets,config,nuspec}]
indent_size = 2

[*.json]
indent_size = 2

# Shell files
[*.{bat,cmd,ps1}]
end_of_line = crlf

# C# files
[*.{cs,csproj,sln,ruleset}]
end_of_line = crlf

[*.{tmpl,tmpl.partial}]
indent_size = 2

[*.liquid]
indent_size = 2

[*.cs]
end_of_line = crlf
# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current

# avoid this. unless absolutely necessary
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# only use var when it's obvious what the variable type is
csharp_style_var_for_built_in_types = false:none
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:none

# use language keywords instead of BCL types
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# name all constant fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.required_modifiers = const

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# static private and protected fields should have s_ prefix
dotnet_naming_rule.static_fields_should_have_prefix.severity = suggestion
dotnet_naming_rule.static_fields_should_have_prefix.symbols = non_public_static_fields
dotnet_naming_rule.static_fields_should_have_prefix.style = static_prefix_style

dotnet_naming_symbols.non_public_static_fields.applicable_kinds = field, event
dotnet_naming_symbols.non_public_static_fields.required_modifiers = static
dotnet_naming_symbols.non_public_static_fields.applicable_accessibilities = private, internal

dotnet_naming_style.static_prefix_style.required_prefix = s_
dotnet_naming_style.static_prefix_style.capitalization = camel_case

# internal and private fields should be _camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style = camel_case_underscore_style

dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal

dotnet_naming_style.camel_case_underscore_style.required_prefix = _
dotnet_naming_style.camel_case_underscore_style.capitalization = camel_case

# public fields should be PascalCase
dotnet_naming_rule.public_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.public_fields_should_be_pascal_case.symbols = public_fields
dotnet_naming_rule.public_fields_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.public_fields.applicable_kinds = field
dotnet_naming_symbols.public_fields.applicable_accessibilities = public

# Code style defaults
dotnet_sort_system_directives_first = true
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_methods = true:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = false:none
csharp_style_pattern_matching_over_as_with_null_check = false:none
csharp_style_inlined_variable_declaration = false:none

# Null checking preferences
csharp_style_throw_expression = false:none
csharp_style_conditional_delegate_call = true:suggestion

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Other
csharp_prefer_braces = true:suggestion

# ReSharper properties
resharper_align_linq_query = true
resharper_align_multiline_argument = true
resharper_align_multiline_binary_expressions_chain = true
resharper_align_multiline_calls_chain = true
resharper_align_multiline_expression_braces = true
resharper_align_multiline_extends_list = true
resharper_align_multiline_for_stmt = true
resharper_align_multiline_parameter = true
resharper_align_multiple_declaration = true
resharper_align_multline_type_parameter_constrains = true
resharper_align_multline_type_parameter_list = true
resharper_align_tuple_components = true
resharper_break_template_declaration = on_single_line
resharper_case_block_braces = next_line
resharper_cpp_int_align_comments = true
resharper_cpp_keep_blank_lines_in_code = 1
resharper_csharp_blank_lines_around_single_line_invocable = 1
resharper_csharp_empty_block_style = together_same_line
resharper_csharp_keep_blank_lines_in_declarations = 1
resharper_csharp_use_indent_from_previous_element = false
resharper_csharp_wrap_arguments_style = chop_if_long
resharper_csharp_wrap_before_binary_opsign = true
resharper_csharp_wrap_before_first_type_parameter_constraint = true
resharper_csharp_wrap_extends_list_style = chop_if_long
resharper_csharp_wrap_multiple_type_parameter_constraints_style = chop_always
resharper_csharp_wrap_parameters_style = chop_if_long
resharper_enforce_line_ending_style = true
resharper_for_built_in_types = use_var_when_evident
resharper_indent_preprocessor_directives = normal
resharper_indent_switch_labels = true
resharper_keep_existing_declaration_parens_arrangement = true
resharper_keep_existing_embedded_arrangement = false
resharper_keep_existing_enum_arrangement = true
resharper_keep_existing_initializer_arrangement = false
resharper_keep_existing_invocation_parens_arrangement = false
resharper_keep_existing_linebreaks = true
resharper_keep_existing_switch_expression_arrangement = false
resharper_line_break_after_colon_in_member_initializer_lists = on_single_line
resharper_max_attribute_length_for_same_line = 10000
resharper_max_initializer_elements_on_line = 2
resharper_member_initializer_list_style = line_break
resharper_namespace_declaration_braces = end_of_line
resharper_namespace_indentation = inner
resharper_place_attribute_on_same_line = false
resharper_place_constructor_initializer_on_same_line = false
resharper_place_expr_method_on_single_line = false
resharper_place_simple_accessor_on_single_line = false
resharper_place_simple_embedded_statement_on_same_line = false
resharper_place_simple_enum_on_single_line = true
resharper_simple_case_statement_style = line_break
resharper_simple_embedded_statement_style = on_single_line
resharper_space_after_ptr_in_data_member = false
resharper_space_after_ptr_in_method = false
resharper_space_after_ref_in_data_member = false
resharper_space_after_ref_in_method = false
resharper_space_before_ptr_in_abstract_decl = true
resharper_space_before_ptr_in_data_member = true
resharper_space_before_ptr_in_method = true
resharper_space_before_ref_in_abstract_decl = true
resharper_space_before_ref_in_data_member = true
resharper_space_before_ref_in_method = true
resharper_space_within_single_line_array_initializer_braces = true
resharper_use_continuous_indent_inside_parens = false
resharper_use_continuous_line_indent_in_expression_braces = true
resharper_use_continuous_line_indent_in_method_pars = true
resharper_use_indent_from_vs = false
resharper_wrap_after_expression_lbrace = false
resharper_wrap_before_arrow_with_expressions = true
resharper_wrap_before_colon = true
resharper_wrap_before_expression_rbrace = false
resharper_wrap_chained_binary_expressions = chop_if_long
resharper_wrap_chained_method_calls = chop_if_long

resharper_show_autodetect_configure_formatting_tip = false
resharper_csharp_naming_rule.private_static_fields = s_ + aaBb, _ + aaBb, t_ + aaBb

# ReSharper inspection severities
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_this_qualifier_highlighting = hint
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_built_in_type_reference_style_for_member_access_highlighting = hint
resharper_built_in_type_reference_style_highlighting = hint
resharper_check_namespace_highlighting = none
resharper_class_never_instantiated_global_highlighting = hint
resharper_convert_to_auto_property_highlighting = hint
resharper_event_never_subscribed_to_global_highlighting = none
resharper_invert_if_highlighting = none
resharper_member_can_be_private_global_highlighting = hint
resharper_redundant_base_qualifier_highlighting = warning
resharper_suggest_var_or_type_built_in_types_highlighting = hint
resharper_suggest_var_or_type_elsewhere_highlighting = hint
resharper_suggest_var_or_type_simple_types_highlighting = hint
resharper_unity_inefficient_property_access_highlighting = hint
resharper_unused_auto_property_accessor_global_highlighting = hint
resharper_unused_member_global_highlighting = none
resharper_unused_member_in_super_global_highlighting = none
resharper_unused_type_global_highlighting = none
resharper_use_nameof_expression_highlighting = hint
resharper_web_config_module_not_resolved_highlighting = warning
resharper_web_config_type_not_resolved_highlighting = warning
resharper_web_config_wrong_module_highlighting = warning
